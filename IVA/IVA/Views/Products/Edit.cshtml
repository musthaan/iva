@model IVA.Models.tbl_Products
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>
    Edit</h2>
@Html.ValidationSummary(true)
<ul class="nav nav-tabs" role="tablist">
    <li class="active"><a href="#home" role="tab" data-toggle="tab">Product</a></li>
    <li><a href="#Details" role="tab" data-toggle="tab">Details</a></li>
    <li><a href="#Specs" role="tab" data-toggle="tab">Specs</a></li>
    <li><a href="#Images" role="tab" data-toggle="tab">Images</a></li>
</ul>
<!-- Tab panes -->
<div class="tab-content">
    <div class="tab-pane active" id="home"> 
    <div class="clear-fix">&nbsp;</div>
        @using (Html.BeginForm("Edit", "Products", null, FormMethod.Post, new { @role = "form" }))
        {
            @Html.HiddenFor(model => model.ID)
             <div class="row">
            <div class="col-md-10">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Name)
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.IsActive)
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive)
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Rate)
                    @Html.TextBoxFor(model => model.Rate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Rate)
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.OurRate)
                    @Html.TextBoxFor(model => model.OurRate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OurRate)
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Stock)
                    @Html.TextBoxFor(model => model.Stock, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Stock)
                </div>
                <div class="form-group col-md-12 footer">
                    <button type="submit" value="Save" class="btn btn-success">
                        Save</button>
                </div>
            </div>  </div>
        }
    </div>
    <div class="tab-pane  " id="Details">
        @using (Html.BeginForm("UpdateDescription", "Products", null, FormMethod.Post, new { @role = "form" }))
        { @Html.HiddenFor(model => model.ID)
            @Html.TextAreaFor(model => model.Remarks, new {  @id = "tinyeditor" })
            <button type="submit" value="Save" class="btn btn-success">
                Save</button>
        }
    </div>
    <div class="tab-pane  " id="Specs">
        @using (Html.BeginForm("UpdateSpecs", "Products", null, FormMethod.Post, new { @role = "form" }))
        { @Html.HiddenFor(model => model.ID)
            //var db =  new IVA.Models.IVADBEntities();
            //    var x= from product in db.tbl_Products.Where(s=> s.ID == Model.ID)
            //           from spec in db.tbl_Specs
            //           select new {
            //           product,spec
            //           };

            //    var y = from proSpec in x

            foreach (var Spec in (new IVA.Models.IVADBEntities()).tbl_Specs)
            { 
            <div class="form-group col-md-6">
                <label for="Spec_Name">
                    @Spec.Name</label>
                @{
                var Product_Specs = (List<IVA.Models.tbl_Product_Specs>)ViewBag.Product_Specs;
                var listItem = Spec.tbl_Spec_items.Select(s => new SelectListItem() { Text = s.Name, Value = s.ID.ToString(), Selected = ((Product_Specs.FirstOrDefault(ps => ps.SpecID == Spec.ID) == null ? "0" : Product_Specs.FirstOrDefault(ps => ps.SpecID == Spec.ID).Value).Equals(s.ID.ToString())) }).ToList();
                listItem.Insert(0, new SelectListItem() { Text = "Select One", Value = "" });
                }
                @Html.DropDownList("spec" + @Spec.Name, listItem, new { @class = "form-control" })
            </div>
            }
            <div class="clear-fix">
            </div>
            <button type="submit" value="Save" class="btn btn-success">
                Save</button>
        }
    </div>
    <div class="tab-pane  " id="Images">
        <div class="row">
            @{Html.RenderPartial("_productImage", Model);}
        </div>
    </div>
</div>
<div class="clear-fix">
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<link href="/Content/tinyeditor/tinyeditor.css" rel="stylesheet" type="text/css" />
<script src="/Scripts/tinyeditor/tiny.editor.packed.js" type="text/javascript"></script>
<script>
    var editor = new TINY.editor.edit('editor', {
        id: 'tinyeditor',
        width: '100%',
        height: 175,
        cssclass: 'tinyeditor',
        controlclass: 'tinyeditor-control',
        rowclass: 'tinyeditor-header',
        dividerclass: 'tinyeditor-divider',
        controls: ['bold', 'italic', 'underline', 'strikethrough', '|', 'subscript', 'superscript', '|',
		'orderedlist', 'unorderedlist', '|', 'outdent', 'indent', '|', 'leftalign',
		'centeralign', 'rightalign', 'blockjustify', '|', 'unformat', '|', 'undo', 'redo', 'n',
		'font', 'size', 'style', '|', 'image', 'hr', 'link', 'unlink', '|', 'print'],
        footer: true,
        fonts: ['Verdana', 'Arial', 'Georgia', 'Trebuchet MS'],
        xhtml: true,

        bodyid: 'editor',
        footerclass: 'tinyeditor-footer',
        toggle: { text: 'source', activetext: 'wysiwyg', cssclass: 'toggle' },
        resize: { cssclass: 'resize' }
    });
</script>
<style>
    .tab-content
    {
        background-color: #FFF;
    }
</style>
